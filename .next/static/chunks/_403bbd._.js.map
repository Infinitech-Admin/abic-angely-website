{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/1/Documents/GitHub/abic-angely-website/components/card/careerscard.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Autocomplete,\r\n  AutocompleteItem,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  useDisclosure,\r\n  ModalContent,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  Image,\r\n} from \"@nextui-org/react\";\r\nimport { useFormik } from \"formik\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\n\r\ninterface Career {\r\n  id: string;\r\n  position: string;\r\n  slots: number;\r\n  image: string;\r\n}\r\n\r\ninterface CareersProps {\r\n  career: Career[];\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  first_name: Yup.string().required(\"First name is required\"),\r\n  last_name: Yup.string().required(\"Last name is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  phone: Yup.string()\r\n    .matches(/^\\d{10,12}$/, \"Phone number must be between 10 and 12 digits\")\r\n    .required(\"Phone number is required\"),\r\n  address: Yup.string().required(\"Address is required\"),\r\n  resume: Yup.mixed<File>()\r\n    .required(\"Resume is required\")\r\n    .test(\"fileFormat\", \"Unsupported format\", (value) =>\r\n      value\r\n        ? [\"application/pdf\", \"application/msword\"].includes(value.type)\r\n        : true,\r\n    )\r\n    .test(\"fileSize\", \"File too large (max 5MB)\", (value) =>\r\n      value ? value.size <= 5 * 1024 * 1024 : true,\r\n    ),\r\n});\r\n\r\nconst CareersCard: React.FC<CareersProps> = ({ career }) => {\r\n  const [selectedPosition, setSelectedPosition] = useState<string>(\r\n    career[0]?.position || \"\",\r\n  );\r\n  const [selectedSlots, setSelectedSlots] = useState<number>(0);\r\n  const [selectedCareer, setSelectedCareer] = useState<Career | null>(\r\n    career[0] || null,\r\n  );\r\n  const { isOpen, onOpen, onOpenChange } = useDisclosure();\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const handlePositionChange = (position: string) => {\r\n    setSelectedPosition(position);\r\n    const selectedCareer = career.find((item) => item.position === position);\r\n\r\n    if (selectedCareer) {\r\n      setSelectedSlots(selectedCareer.slots);\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      career_id: selectedCareer?.id || \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      resume: null,\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      setLoading(true); // Set loading to true when submit starts\r\n      try {\r\n        const formData = new FormData();\r\n\r\n        Object.entries(values).forEach(([key, value]: [string, unknown]) => {\r\n          if (value !== null && value !== undefined) {\r\n            if (key === \"resume\" && value instanceof File) {\r\n              // Append file (resume)\r\n              formData.append(key, value);\r\n            } else if (typeof value === \"string\") {\r\n              // Append other fields as strings\r\n              formData.append(key, value);\r\n            } else {\r\n              console.warn(`Unexpected value type for key ${key}:`, value);\r\n            }\r\n          }\r\n        });\r\n\r\n        await axios.post(\r\n          \"https://abicmanpowerservicecorp.com/api/main/submit-application\",\r\n          formData,\r\n        );\r\n        toast.success(\"Application submitted successfully!\");\r\n        resetForm();\r\n      } catch (error) {\r\n        if (axios.isAxiosError(error)) {\r\n          if (error.response) {\r\n            toast.error(\r\n              error.response.data.message ||\r\n                \"Failed to submit your application. Please try again later.\",\r\n            );\r\n          } else if (error.request) {\r\n            toast.error(\"No response from server. Please try again later.\");\r\n          }\r\n        } else {\r\n          toast.error(\"Unexpected error occurred. Please try again.\");\r\n        }\r\n      } finally {\r\n        setLoading(false); // Reset loading state after submission is done\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Toaster position=\"top-center\" reverseOrder={false} />\r\n      <div className=\"mx-auto max-w-screen-md\">\r\n        <div>\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"flex flex-col md:flex-row gap-4 items-center\">\r\n                <div className=\"w-full\">\r\n                  <Image\r\n                    alt=\"HeroUI hero Image\"\r\n                    src=\"https://abic-agent-bakit.s3.ap-southeast-1.amazonaws.com/media/abic-careers.png\"\r\n                    width={1000}\r\n                  />\r\n                </div>\r\n                <div className=\"w-full md:px-6\">\r\n                  <h1 className=\"py-2\">Slots: {selectedSlots || \"0\"}</h1>\r\n                  <div className=\"flex flex-col gap-4\">\r\n                    <div className=\"w-full\">\r\n                      <Autocomplete\r\n                        placeholder=\"Select a Position\"\r\n                        value={selectedPosition}\r\n                        onSelectionChange={(key) => {\r\n                          const selectedCareer = career.find(\r\n                            (item) => item.id === key,\r\n                          );\r\n\r\n                          if (selectedCareer) {\r\n                            handlePositionChange(selectedCareer.position);\r\n                          }\r\n                        }}\r\n                      >\r\n                        {career.map((item) => (\r\n                          <AutocompleteItem\r\n                            key={item.id}\r\n                            textValue={item.position}\r\n                            value={item.id}\r\n                          >\r\n                            {item.position}\r\n                          </AutocompleteItem>\r\n                        ))}\r\n                      </Autocomplete>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Button\r\n                        className=\"bg-violet-700 text-white uppercase w-full\"\r\n                        onPress={onOpen}\r\n                      >\r\n                        Apply Now\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n\r\n        <Modal isOpen={isOpen} onOpenChange={onOpenChange}>\r\n          <ModalContent>\r\n            {(onClose) => (\r\n              <>\r\n                <ModalHeader className=\"flex flex-col gap-1\">\r\n                  Apply for {selectedPosition}\r\n                </ModalHeader>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <ModalBody>\r\n                    <Input\r\n                      label=\"First Name\"\r\n                      name=\"first_name\"\r\n                      placeholder=\"eg. Juan\"\r\n                      type=\"text\"\r\n                      value={formik.values.first_name}\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.first_name && formik.errors.first_name && (\r\n                      <p className=\"text-red-500 text-sm\">\r\n                        {formik.errors.first_name}\r\n                      </p>\r\n                    )}\r\n                    <Input\r\n                      label=\"Last Name\"\r\n                      name=\"last_name\"\r\n                      placeholder=\"eg. Dela Cruz\"\r\n                      type=\"text\"\r\n                      value={formik.values.last_name}\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.last_name && formik.errors.last_name && (\r\n                      <p className=\"text-red-500 text-sm\">\r\n                        {formik.errors.last_name}\r\n                      </p>\r\n                    )}\r\n                    <Input\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"eg. juan@gmail.com\"\r\n                      type=\"email\"\r\n                      value={formik.values.email}\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email && (\r\n                      <p className=\"text-red-500 text-sm\">\r\n                        {formik.errors.email}\r\n                      </p>\r\n                    )}\r\n                    <Input\r\n                      label=\"Phone Number\"\r\n                      name=\"phone\"\r\n                      placeholder=\"eg. 09924401097\"\r\n                      type=\"text\"\r\n                      value={formik.values.phone}\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.phone && formik.errors.phone && (\r\n                      <p className=\"text-red-500 text-sm\">\r\n                        {formik.errors.phone}\r\n                      </p>\r\n                    )}\r\n                    <Input\r\n                      label=\"Address\"\r\n                      name=\"address\"\r\n                      placeholder=\"eg. Makati City, Philippines\"\r\n                      type=\"text\"\r\n                      value={formik.values.address}\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                    {formik.touched.address && formik.errors.address && (\r\n                      <p className=\"text-red-500 text-sm\">\r\n                        {formik.errors.address}\r\n                      </p>\r\n                    )}\r\n                    <Input\r\n                      name=\"resume\"\r\n                      type=\"file\"\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={(event) => {\r\n                        const file = event.currentTarget.files\r\n                          ? event.currentTarget.files[0]\r\n                          : null;\r\n\r\n                        formik.setFieldValue(\"resume\", file);\r\n                      }}\r\n                    />\r\n                    {formik.touched.resume && formik.errors.resume && (\r\n                      <p className=\"text-red-500 text-sm\">\r\n                        {formik.errors.resume}\r\n                      </p>\r\n                    )}\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"danger\" variant=\"light\" onPress={onClose}>\r\n                      Close\r\n                    </Button>\r\n                    <Button color=\"primary\" isLoading={loading} type=\"submit\">\r\n                      {loading ? \"Sending Application...\" : \"Send Application\"}\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </form>\r\n              </>\r\n            )}\r\n          </ModalContent>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CareersCard;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}